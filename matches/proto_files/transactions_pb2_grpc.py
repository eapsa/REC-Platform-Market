# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_files import market_pb2 as market__pb2
from proto_files import transactions_pb2 as transactions__pb2


class TransactionsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddTxReceipt = channel.unary_unary(
            '/proto.TransactionsService/AddTxReceipt',
            request_serializer=transactions__pb2.ListReceipts.SerializeToString,
            response_deserializer=market__pb2.Empty.FromString,
        )
        self.GetPayments = channel.unary_unary(
            '/proto.TransactionsService/GetPayments',
            request_serializer=transactions__pb2.IssuerId.SerializeToString,
            response_deserializer=transactions__pb2.PaymentsResponse.FromString,
        )


class TransactionsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddTxReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPayments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AddTxReceipt': grpc.unary_unary_rpc_method_handler(
            servicer.AddTxReceipt,
            request_deserializer=transactions__pb2.ListReceipts.FromString,
            response_serializer=market__pb2.Empty.SerializeToString,
        ),
        'GetPayments': grpc.unary_unary_rpc_method_handler(
            servicer.GetPayments,
            request_deserializer=transactions__pb2.IssuerId.FromString,
            response_serializer=transactions__pb2.PaymentsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'proto.TransactionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class TransactionsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddTxReceipt(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TransactionsService/AddTxReceipt',
                                             transactions__pb2.ListReceipts.SerializeToString,
                                             market__pb2.Empty.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPayments(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.TransactionsService/GetPayments',
                                             transactions__pb2.IssuerId.SerializeToString,
                                             transactions__pb2.PaymentsResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
